filter(variable != "E_PT")
P<- ggplot()+
geom_point(Stra2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#E31A1C",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Stra2019_plot <- Evaporation_Stra2019 %>%
melt(.,id="Date")%>%
filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_PT")%>%
filter(variable != "E_BT")%>%
P<- ggplot()+
geom_point(Stra2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#E31A1C",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Stra2019_plot <- Evaporation_Stra2019 %>%
melt(.,id="Date")%>%
filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_PT")%>%
filter(variable != "E_BT")
P<- ggplot()+
geom_point(Stra2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#E31A1C",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
brewer.pal(n = 12, name = "Paired")
Stra2019_plot <- Evaporation_Stra2019 %>%
melt(.,id="Date")%>%
filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_PT")%>%
filter(variable != "E_BT")
P<- ggplot()+
geom_point(Stra2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Stra2019_plot <- Evaporation_Stra2019 %>%
melt(.,id="Date")%>%
#filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_PT")%>%
filter(variable != "E_BT")%>%
filter(variable != "E_DK")
P<- ggplot()+
geom_point(Stra2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Stra2020_plot <- Evaporation_Stra2020 %>%
melt(.,id="Date")%>%
#filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_PT")%>%
filter(variable != "E_BT")%>%
filter(variable != "E_DK")
P<- ggplot()+
geom_point(Stra2020_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
# filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")
# filter(variable != "E_PEN")%>%
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
# filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_D")
*%>%
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
# filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
# filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_PEN")
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
# filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_PEN2")
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
# filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_PEN2")%>%
filter(variable != "E_BS")
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2020_plot <- Evaporation_Tri2020 %>%
melt(.,id="Date")%>%
filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")
P<- ggplot()+
geom_point(Tri2020_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2020_plot <- Evaporation_Tri2020 %>%
melt(.,id="Date")%>%
#filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_PEN2")%>%
filter(variable != "E_BS")
P<- ggplot()+
geom_point(Tri2020_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Tri2019_plot <- Evaporation_Tri2019 %>%
melt(.,id="Date")%>%
# filter(value < 10) %>%               #lines to filter results
filter(variable != "E_MT")%>%
filter(variable != "E_PEN")%>%
filter(variable != "E_RH")%>%
filter(variable != "E_JH")%>%
filter(variable != "E_BR")%>%
filter(variable != "E_D")%>%
filter(variable != "E_M")%>%
filter(variable != "E_PEN2")%>%
filter(variable != "E_BS")
P<- ggplot()+
geom_point(Tri2019_plot,mapping = aes(x= Date, y= value,  group = variable,color = variable), size =2)+
theme_bw()+
labs(y = "Evaporation (mm/day)")+
theme(axis.title = element_text(size = 14, face = "bold",colour = "black"),
axis.text  = element_text(size = 12, face = "bold",colour = "black"))+
scale_color_manual(name = "Evaporation Methods",
values = c("E_BT" = "#A6CEE3",
"E_BR" = "#1F78B4",
"E_PEN" = "#B2DF8A",
"E_PEN2"= "#33A02C",
"E_PT" = "#FB9A99",
"E_DK" = "#E31A1C",
"E_BS" = "#FFFF99",
"E_D" = "#FDBF6F",
"E_JH" = "#FF7F00",
"E_M" = "#CAB2D6",
"E_RH" = "#6A3D9A",
"E_MT" = "#B15928",
"Evap_obs" = "black"))
print (P)
Stra_Ewater_2019$Date <- Stra_Ewater_2019$YYYYmmddHHMM
Stra_Ewater_2019$Date <- as.POSIXct(as.character(Stra_Ewater_2019[["Date"]]), format = "%Y%m%d%H%M")
Stra_Ewater_2020$Date <- Stra_Ewater_2020$YYYYmmddHHMM
Stra_Ewater_2020$Date <- as.POSIXct(as.character(Stra_Ewater_2020[["Date"]]), format = "%Y%m%d%H%M")
Tri_Ewater_2019$Date <- Tri_Ewater_2019$YYYYmmddHHMM
Tri_Ewater_2019$Date <- as.POSIXct(as.character(Tri_Ewater_2019[["Date"]]), format = "%Y%m%d%H%M")
Tri_Ewater_2020$Date <- Tri_Ewater_2020$YYYYmmddHHMM
Tri_Ewater_2020$Date <- as.POSIXct(as.character(Tri_Ewater_2020[["Date"]]), format = "%Y%m%d%H%M")
tinytex::reinstall_tinytex(repository = "illinois")
library(tinytex)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
date.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
\inputencoding{latin2}
\bibliography{mybib}
\inputencoding{utf8}
install.packages("MikTex")
library (MikTex)
