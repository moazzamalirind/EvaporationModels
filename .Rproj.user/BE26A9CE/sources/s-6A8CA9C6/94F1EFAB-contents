---
title: "Evaporation Estimation"
author: "Moazzam Rind"
date: "11/5/2021"
output: pdf_document
last updated: "12/13/2021"
---

## Class project CE-560 

### {Project Description}
forteen commonly referred evaporation estimation models were used to perform the comparative study. The objective was to discuss details (assumptions and inputs) of each of the models and estimate evaporation. This comparative study can be helpful identify suitable model for a locality; specially this study can serve as a reference to water mangers, farmers, and researchers interested in Evaporation estimation.


### Evaporation Methods.
The selected methods are categorized into three groups:
a.	Combination Methods: 1.Bowen-ratio energy budget, 2. Penman, 3.Priestly-Taylor, 4. DeBruin–Keijman, 5.Brutsaert–Stricker, and 6.DeBruin (DB) 
b.	Solar Radiation-based Methods: 7. Jensen–Haise and 8. Makkink
c.	Dalton-based Methods: 9.Mass transfer and 10.Ryan–Harleman
d.  Temperature-based Methods: 11. Mather, 12. Papadakis, and 13. Mass-Transfer
e.  14. Direct estimation or estimation of LE.


```{r }

#################
# Getting started 
#################
# Remove everything from R's memory.
rm(list=ls())

##Packages required:
install.packages("sos")
install.packages("leaps")
install.packages("readxl")
install.packages("Lubridate")
install.packages("ggplot2")

```

#Load Installed packages
```{r setup}

library(sos)
library(leaps)
library (data.table)
library (dplyr)
library (readxl)
library (lubridate)
library(ggplot2)

```

# Set working directory
#Here I am using direct file Paths. ##You should change the path to your saved data file path.


```{r setup}
####################
#### Read data sets 
######################
#Temporal coverage:
### September 2021


#Delete extra text and spaces in the text file inorder to get proper table format data. Here, I have prepocced the data before uploading.

#Meteorological data
Sept21_Met <- read.table("C:/Users/Mooz/OneDrive - Washington State University (email.wsu.edu)/Advanced Hydrology/Class_Project_Code/uurgeg_260_2011-2020/uurgeg_260_2021-2030.txt", sep=",", header=TRUE)

#The date format is YYYYMMDD so converting it to %y%m%d (normal format)

Sept21_Met$Date<- Sept21_Met$YYYYMMDD  #Make another column with name Date
Sept21_Met$Date <- ymd(Sept21_Met$Date)



#Water Temperature data
Sep21_WaterTemp <- my_data <- read_excel("C:/Users/Mooz/OneDrive - Washington State University (email.wsu.edu)/Advanced Hydrology/Class_Project_Code/uurgeg_260_2011-2020/Sept_WaterTemp21.xlsx", sheet = "HourlyTemp")

#formatting Date
Sep21_WaterTemp$time <- format(as.POSIXct(Sep21_WaterTemp$Date),    # Add time column
                    format = "%H:%M")
Sep21_WaterTemp$Date <- as.Date(Sep21_WaterTemp$Date)

Sept21_TempWater<- subset(Sep21_WaterTemp,Date <"2021-12-6")


##2019-2020, summer periods (1st of May - 31st of August)???????????????
```

############################################################################################################################
############################################################################################################################
1. Bowen-Ratio Energy Budget
#Assumptions
##1. The energy transfer coefficients for latent heat and sensible heat fluxes are equal{1}.
##2. A basic criterion of this method is that the air temperature and water vapor pressure are measured (above an evaporating surface) at such heights that the horizontal gradient of air temperature and water vapor pressure can be neglected {1}. 
##3.The equality  assumption (coefficients for latent heat = coefficients for sensible heat) has been proven to be valid for a range of field and vegetation surfaces in various climates. But not valid for some heterogeneous vegetation surfaces {1}

#parameters:
E= Estimated Evaporation Rate (mm/day)
Rn = net radiation (W/m2)
DQ= heat storage change in the water body (W/m2)
rw= water density (1000 kg/m3)
Lt= Latent heat of Vaporization (2.45 x 10^6 J/ kg)
B= Bowen Ratio (dimensionless)
Ts= water surface temperature (deg C)
Ta= air temperature (deg C)
P= atmospheric pressure (kPa) 
Rm= Ratio of molecular weight of water to that of dry air (0.622, dimensionless)
es_sat= Saturated vapor pressure at the water surface temperature (kPa)
ea_sat = Saturated vapor pressure at the air temperature (KPa)
ea =  vapor pressure at the air temperature (kPa) 
RH = relative humidity (%)
cpw = specific heat of water at constant pressure (4192 J /kg.deg C)
cp = specific heat of air at constant pressure (1004 J/kg.deg C)
D = multipliers that convert the unit of evaporation into mm /day(86.4 X 10^6)
MTw = delta.Tw/delta.t = mean water temperature change during the time interval delta.t (deg c/time)
zd = largest depth at the profile measurement (m).
Zd = 1.5m ( Dutch water authority (RWS) has measured hourly water temperature at a depth of about 1.5 m (mentioned in detials of the downloaded data))
#I am not sure about the zd Value so it can be used for calibration as well.


###############################################################################
References:
{1} Irmak, S., Skaggs, K. E., & Chatterjee, S. (2014). A review of the Bowen ratio surface energy balance method for quantifying evapo-transpiration and other energy fluxes. Transactions of the ASABE, 57(6), 1657-1674.

###############################################################################




##########################################################################
Description:



########################################################################################




```{R}
##################################################################################

#pre -processing
??????
  
rw<- 1000    #(kg/m3)


# Adding column with serial number to have a better track of number of available point
Sept21_Met$Serial<- 1:nrow(Sept21_Met)

Sept21_Met$Date <- as.Date(Sept21_Met$Date, format= "%Y-%m-%d")


#Creating a data frame starting from the date as similar to water temperature data and contains only required columns

Df_Debilt <- subset(Sept21_Met,Date> "2021-11-08")

Df_Debilt_Sub <- data.table(Df_Debilt$Date,Df_Debilt$HH,Df_Debilt$T,Df_Debilt$FH,Df_Debilt$Q,Df_Debilt$U,Df_Debilt$P)

#Column names
colnames(Df_Debilt_Sub) [1] ="Date"
colnames(Df_Debilt_Sub) [2] ="Hour"
colnames(Df_Debilt_Sub) [3] ="Ta"        #Here given in 0.1 deg C so need to multiply by 0.1 for real value
colnames(Df_Debilt_Sub) [4] ="U"         #Here given in 0.1 m/s so need to multiply by 0.1 for real value
colnames(Df_Debilt_Sub) [5] ="Rn"        #Here its called Global radiation (j/cm2) which requires conversion in (W/m2)
colnames(Df_Debilt_Sub) [6] ="RH"        #In percent              
colnames(Df_Debilt_Sub) [7] ="P"          #Given in HPa and required in KPa

Df_Debilt_Sub$Tw <- Sept21_TempWater$`Temp (°C)`

Df_Debilt_Sub$Ta <- Df_Debilt_Sub$Ta * 0.1
Df_Debilt_Sub$U <- Df_Debilt_Sub$U * 0.1
Df_Debilt_Sub$Rn <- Df_Debilt_Sub$Rn * 10000         #1 j/cm2 = 10000 W/m2
Df_Debilt_Sub$P <- Df_Debilt_Sub$P*0.1



# Change in water temperature per hour
delta_Tw <- diff(as.matrix(Df_Debilt_Sub$Tw))

#Delta t is one hour so Mtw equal delta tw
MTw <- delta_Tw
 
##Constants  
zd<- 1 #(m)
cpw <- 4192   #(J/kg deg C)
rw <- 1000 #(kg/m3)
  
#DQ <- cpw*rw *MTw*zd
#Here DQ for hourly time step (DQ_hr) 

DQ_hr<- cpw*rw*zd*MTw

DQ_hr <- rbind(DQ_hr, c(0))


#Now finding saturated vapor pressure at air temperature (Pa) 
#Ta is given in the data set  hourly time steps.

ea_sat_hr<- {0.611^(17.27*Df_Debilt_Sub$Ta/(237.3+Df_Debilt_Sub$Ta))} * 1000  # 1000 from kpa to pa

ea <- (ea_sat_hr*Df_Debilt_Sub$RH)/100

#Here surface is water so Ts= tw
Ts<- Df_Debilt_Sub$Tw

es_sat <- 0.611^(17.27*Ts/(237.3+Ts))

# Pressure at the  lake altitude  (Pa)
P<- 101.3 * {(293-0.0065*alt)/293}*1000   # 1000 is conversion from kPa to pa
# alt is altitude above mean sea level (m)

Rm = 0.622
Lt<- 2.45*10^6        #(J/kg)   this is assumed value. Also called lv (latent heat of vaporization)
cp<- 1013             #(J/kg deg C)


B <- {cp* P *(Ts-Df_Debilt_Sub$Ta)}/{Rm*Lt*(es_sat-ea)}

#E is the required parameter (Estimated Evaporation Rate mm/day)

Rn <-Df_Debilt_Sub$Rn
D <- 86.4*10^6            # Conversion to mm/d 

E1<- {{Rn - DQ_hr}/{rw*(Lt*(1+B)+ Ts*cpw)}}* D

```

2. Penman Method
#Assumptions
#Additional Parameters

Delta = Slope of saturated vapor pressure–-air temperature curve (Pa/deg c), 
Pc= psychometric constant (Pa/deg c), 
f_U = Wind function (W/ m*hpa), 
U = wind speed at the measurement height (m/s).

```{r}
U <- Df_Debilt_Sub$U
f_u<- 3.6+2.5*U

Pc<- ((cp*P)/(Rm*Lt)) *1000  #from kpa to pa

Ta <- Df_Debilt_Sub$Ta

Delta <- {{4098*exp(0.611^(17.27*Ta/(237.3+Ta)))}/{Ta + 237.2}^2}* 1000   #1000 is for conversion from Kpa to pa    


E2<- {{(Delta/(Delta+Pc))*{(Rn - DQ_hr)/(Lt*rw)}} + {Pc*f_u*(ea_sat_hr-ea)*10/ ((Delta+Pc)*Lt*rw)}}*D

```

3. Priestley–Taylor Method
#Assumptions
#Additional Parameters
Alpha = Priestley–Taylor empirical constant ( value = 1.26)

```{r}
Alpha <- 1.26

E3<- Alpha * {(Delta/(Delta+Pc))*{(Rn - DQ_hr)/(Lt*rw)}} *D

```

4.DeBruin–Keijman  method
#Assumptions
#Additional Parameters

```{r}

E4<- Alpha * {(Delta/(0.85*Delta+0.63*Pc))*{(Rn - DQ_hr)/(Lt*rw)}} *D

# or 

E4_2 <- {(ea_sat_hr/(0.85*ea_sat_hr + 0.63*Pc))*{(Rn - DQ_hr)/(Lt*rw)}}* D

#D and UCM Are same

```

5.Brutsaert–Stricker  method
#Assumptions
#Additional Parameters

```{r}

E5<- {{(2*Alpha -1)*(Delta/(Delta+Pc))*{(Rn - DQ_hr)/(Lt*rw)}} - {Pc*f_u*(ea_sat_hr-ea)*10/ ((Delta+Pc)*Lt*rw)}}*D


E5_2 <- {(2*Alpha -1)*(ea_sat_hr/(ea_sat_hr+Pc))*{(Rn - DQ_hr)/(Lt*rw)}}* D +  {(ea_sat_hr/(ea_sat_hr+Pc))*(0.26*(0.5+0.54*U)*((es_sat-ea)*100))}  # 100 is from HPa to pa


```

6. DeBruin (DB) Method 
#Assumptions
#Additional Parameters

```{r}

E6<- 1.192*{(Alpha/(Alpha-1))*(ea_sat_hr/(ea_sat_hr+Pc))*{(2.9+2.1*U)*((es_sat-ea)*100)}/(Lt*rw)}*D      # 100 is from HPa to pa

```


7.Jensen–Haise method
#Assumptions
#Additional Parameters
Rs= Incoming solar radiation (W/m2)
```{r}
Rs<-           ????????????
E7<- {0.014* (1.8*Ta + 32)-0.37}*Rs/(Lt*rw)*D

```

8.Makkink method
#Assumptions
#Additional Parameters
Rs= Incoming solar radiation (W/m2)
```{r}
Rs<-           ????????????
E8<- 0.61*(Delta/(Delta+Pc))* (Rs/(Lt*rw))*D -0.012
          
```

9.Mass Transfer method
#Assumptions
#Additional Parameters
N = mass transfer coefficient
As= Lake surface area (Acre)
```{r}

As<- ?????
N<- 0.00338/(As^0.05)

E9<- N*U*(es_sat-ea)*1000
          
```

10.Ryan–Harleman method
#Assumptions
#Additional Parameters

```{r}

E10<- {{2.7*(Ts-Ta)^(1/3) + 3.1*U}/(Lt*rw)}*(ea_sat_hr-ea)*10*D
  
```

11. Mather method (mm/day)

#Assumptions
#Additional Parameters
I = Annual heat index 

```{r}

#I <- sum of i. Where
 i<- (Ta/5)^1.514

I <- 

E11<- {1.6* (10*Ta/I)^(((I^3)*6.75*10^-7) - ((I^2)*7.71*10^-5) + (I*1.79*10^-2) +0.49)}* (1/d)
  
```


12. Papadakis method  (Its normally for monthly timestep)
#Assumptions
#Additional Parameters

```{r}

E12<- {0.5625*{max(ea_sat_hr)-(min(ea_sat_hr)-2)}}* (1/d)
  
```


13. Mass-Transfer method   by Harbeck and other, 1958
#Assumptions 
#Additional Parameters
N mass-transfer coefficient 
U_2= wind velocity measured at 2m height
e0= Saturated vapor pressure at the temperature of the water surface (millibars)
ea= vapor pressure at temperature and relative humidity of the air, (millibars)

citiation: Rosenberry, D. O., Stannard, D. I., Winter, T. C., & Martinez, M. L. (2004). Comparison of 13 equations for determining evapotranspiration from a prairie wetland, Cottonwood Lake area, North Dakota, USA. Wetlands, 24(3), 483-497.

```{r}
 N<- 0.00547 #parkhurst et al. (1998)
E13<- {N*U_2 (e0-ea)}
  
```



14. Direct method or estimation of Latent Heat LE.

E= {LE/(rw*lV)}* D           {Reference thesis Dalton et al., 2004}

#Assumptions 
#Additional parameters
LE= Latent heat Flux (W/M2)
rw= density of water  (1000 kg/m3)
lv= latent heat of vaporization (J/kg)
D= conversion factor from m/s to mm/day  (86400000)
E= Evaporation (mm/day)

lv= (2.501- (0.002361*Ts))*1000000    (J/kg)

Here, Ts is the water surface temperature (oC) and 1000000 is conversion from MJ to J.

```{r}

lv <- (2.501- (0.002361*Ts))*1000000 

E14 <- {LE/(rw*lV)}* D  
  
```







```{r}

Evaporation <- data.table(Df_Debilt_Sub$Date,Df_Debilt_Sub$Hour,E1,E2,E3,E4,E5,E9)

#Column names
colnames(Evaporation) [1] ="Date"
colnames(Evaporation) [2] ="Hour"
colnames(Evaporation) [3] ="Bowen_Ratio"        
colnames(Evaporation) [4] ="Penman"        
colnames(Evaporation) [5] ="Priestley–Taylor"        
colnames(Evaporation) [6] ="DeBruin–Keijman"                     
colnames(Evaporation) [7] ="Brutsaert–Stricker" 
colnames(Evaporation) [8] ="Ryan–Harleman"

#Plotting
P<- ggplot(Evaporation , aes(x=Date)) + 
#geom_line(aes(y = Bowen_Ratio), color = "darkred") + 
  geom_line(aes(y = Penman,color="steelblue"), linetype="twodash") +
  geom_line(aes(y = `Priestley–Taylor`,color = "Green") ) +
  geom_line(aes(y = `DeBruin–Keijman`, color = "Yellow")) +
  geom_line(aes(y = `Brutsaert–Stricker`, color = "Black")) +
  geom_line(aes(y = `Ryan–Harleman`, color = "red")) + ylab("Evaporation") 
P+ scale_fill_discrete(name = "Colour", labels = c("Penman", "Priestley–Taylor", "DeBruin–Keijman","Brutsaert–Stricker","Ryan–Harleman"))

  
  

```